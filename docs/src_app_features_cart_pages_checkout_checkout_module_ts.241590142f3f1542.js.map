{"version":3,"file":"src_app_features_cart_pages_checkout_checkout_module_ts.241590142f3f1542.js","mappings":"8UAYUA,yBAIEA,SACFA,kCAHEA,uBAEAA,wDAGJA,qBAGEA,4BACFA,SCbF,MAAOC,EAWXC,YACUC,EACAC,EACAC,GAFAC,mBACAA,cACAA,UAbVA,WAAgB,EAGhBA,oBAAmC,CACjC,CAAEC,OAAQ,cAAeC,mBAAoB,GAC7C,CAAED,OAAQ,aAAcC,mBAAoB,GAC5C,CAAED,OAAQ,MAAOC,mBAAoB,IACrC,CAAED,OAAQ,cAAeC,mBAAoB,IAO5C,CAEHC,WACE,MAAMC,EAAcJ,KAAKF,OAAOM,IAC1BC,EAAcD,EAAIE,UAAUF,EAAIG,QAAQ,IAAK,GAAK,EAAGH,EAAII,QAC/DR,KAAKH,YAAYY,eAAeJ,GAEhCL,KAAKU,kBAAoBV,KAAKD,GAAGY,MAAM,CACrCV,OAAQ,CAAC,GAAI,CAACW,kBAGhBZ,KAAKa,MAAQb,KAAKH,YAAYiB,iBAAiBD,KACjD,CAEAE,eACE,GAAIf,KAAKU,kBAAkBM,MAAO,CAChC,MAAMC,EAAYjB,KAAKU,kBAAkBQ,cACnCC,EACJnB,KAAKoB,eAAeC,OAAOJ,EAAUhB,SAEvCD,KAAKF,OAAOwB,SAAS,CAAC,uBACtBtB,KAAKH,YAAY0B,iBAAiBJ,GAClCnB,KAAKH,YAAY2B,WAErB,EAvCW7B,EAAiB,oCAAjBA,GAAiB8B,sCAAjB9B,EAAiB,sBAAjBA,EAAiB+B,2aDV9BhC,iBAAqB,aAArBA,CAAqB,cAEPA,sBAAUA,UAEtBA,gBAAMA,0BAAcA,UAEtBA,kBAAkD,UAAlDA,CAAkD,UAAlDA,CAAkD,qBAAlDA,CAAkD,gBAI/BA,2BAAcA,QACzBA,yBACEA,+BAMFA,QACAA,8BAKFA,UAEFA,kBAAqB,cAEjBA,+BACFA,QACAA,sBAIEA,gCAASiC,gBAAc,GAEvBjC,sBACFA,qBA/BAA,gDAOyBA,2CAOpBA,gFAQHA,kEAKAA,0rBE7BR,MAAMkC,EAAiB,CAAC,CAAEC,KAAM,GAAIC,UAAWnC,IAMzC,MAAOoC,KAAqB,oCAArBA,EAAqB,EAArBA,EAAqB,sBAArBA,MAAqB,0BAHtBC,cAAsBJ,GACtBI,gCCGN,MAAOC,KAAc,oCAAdA,EAAc,EAAdA,EAAc,sBAAdA,MAAc,0BAFfC,IAAcH,EAAuBI","names":["i0","CheckoutComponent","constructor","cartService","router","fb","this","method","discountPercentage","ngOnInit","url","currentStep","substring","indexOf","length","changeStepData","paymentMethodForm","group","Validators","total","getPaymentData","confirmOrder","valid","formValue","getRawValue","paymentMethod","paymentMethods","Number","navigate","setPaymentMethod","checkOut","core","selectors","ctx","routes","path","component","CheckoutRoutingModule","RouterModule","CheckoutModule","SharedModule","CartModule"],"sourceRoot":"webpack:///","sources":["./src/app/features/cart/pages/checkout/checkout.component.html","./src/app/features/cart/pages/checkout/checkout.component.ts","./src/app/features/cart/pages/checkout/checkout-routing.module.ts","./src/app/features/cart/pages/checkout/checkout.module.ts"],"sourcesContent":["<div class=\"go-back\">\n  <button mat-icon-button routerLink=\"/cart/resume\">\n    <mat-icon>arrow_back</mat-icon>\n  </button>\n  <span>Back to Resume</span>\n</div>\n<form [formGroup]=\"paymentMethodForm\" role=\"form\">\n  <div class=\"checkout-container\">\n    <div class=\"payment-method\">\n      <mat-form-field appearance=\"fill\">\n        <mat-label>Payment Method</mat-label>\n        <mat-select formControlName=\"method\">\n          <mat-option\n            *ngFor=\"let method of paymentMethods; let i = index\"\n            [value]=\"i\"\n          >\n            {{ method.method }}\n          </mat-option>\n        </mat-select>\n        <mat-error\n          *ngIf=\"paymentMethodForm.controls['method'].hasError('required')\"\n        >\n          Required Field\n        </mat-error>\n      </mat-form-field>\n    </div>\n    <div class=\"confirm\">\n      <span class=\"confirm-data\">\n        Total: {{ total | currency : \"USD\" : \"symbol\" }}\n      </span>\n      <button\n        mat-raised-button\n        color=\"primary\"\n        [disabled]=\"paymentMethodForm.invalid\"\n        (click)=\"confirmOrder()\"\n      >\n        CONFIRM\n      </button>\n    </div>\n  </div>\n</form>\n","import { Component } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { CartService } from 'src/app/core/services';\nimport { IPaymentMethod } from '../../models';\n\n@Component({\n  templateUrl: './checkout.component.html',\n  styleUrls: ['./checkout.component.scss'],\n})\nexport class CheckoutComponent {\n  total: number = 0;\n  paymentMethodForm!: FormGroup;\n\n  paymentMethods: IPaymentMethod[] = [\n    { method: 'Credit Card', discountPercentage: 0 },\n    { method: 'Debit Card', discountPercentage: 0 },\n    { method: 'PIX', discountPercentage: 15 },\n    { method: 'Bank Billet', discountPercentage: 10 }, // Boleto\n  ];\n\n  constructor(\n    private cartService: CartService,\n    private router: Router,\n    private fb: FormBuilder\n  ) {}\n\n  ngOnInit() {\n    const url: string = this.router.url;\n    const currentStep = url.substring(url.indexOf('/', 2) + 1, url.length);\n    this.cartService.changeStepData(currentStep);\n\n    this.paymentMethodForm = this.fb.group({\n      method: ['', [Validators.required]],\n    });\n\n    this.total = this.cartService.getPaymentData()['total'];\n  }\n\n  confirmOrder() {\n    if (this.paymentMethodForm.valid) {\n      const formValue = this.paymentMethodForm.getRawValue();\n      const paymentMethod: IPaymentMethod =\n        this.paymentMethods[Number(formValue['method'])];\n\n      this.router.navigate(['/cart/confirmation']);\n      this.cartService.setPaymentMethod(paymentMethod);\n      this.cartService.checkOut();\n    }\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { CheckoutComponent } from './checkout.component';\n\nconst routes: Routes = [{ path: '', component: CheckoutComponent }];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class CheckoutRoutingModule {}\n","import { NgModule } from '@angular/core';\n\nimport { CheckoutRoutingModule } from './checkout-routing.module';\nimport { CheckoutComponent } from './checkout.component';\nimport { SharedModule } from 'src/app/shared/shared.module';\nimport { CartModule } from '../../cart.module';\n\n@NgModule({\n  declarations: [CheckoutComponent],\n  imports: [SharedModule, CheckoutRoutingModule, CartModule],\n})\nexport class CheckoutModule {}\n"],"x_google_ignoreList":[]}