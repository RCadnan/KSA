{"version":3,"file":"src_app_features_catalog_pages_product-details_product-details_module_ts.0d3f8a06f59d69d4.js","mappings":"wYAUM,MAAOA,EAMXC,YACUC,EACAC,EACAC,EACAC,EACAC,GAJAC,aACAA,cACAA,aACAA,uBACAA,mBATVA,gBAAqB,EACrBA,cAAmB,EACnBA,WAAgB,CAQb,CAEHC,WACE,MAAMC,EAAaF,KAAKL,MAAMQ,SAASC,SAASC,IAAI,QACpDL,KAAKD,YAAYO,UAAUN,KAAKJ,OAAOW,KACvCP,KAAKQ,eAAeN,EACtB,CAEMM,eAAeN,GAAU,qCAC7BO,EAAKC,cAAgBD,EAAKX,gBAAgBa,eAAeT,GACzDO,EAAKG,MAAQH,EAAKC,QAAQE,MAC1BH,EAAKZ,MAAMgB,SAAS,GAAGJ,EAAKC,QAAQb,mBAAoB,EAH3B,EAI/B,CAEAiB,YAWEd,KAAKD,YAAYgB,iBAViB,CAChCb,GAAIF,KAAKU,QAASR,GAClBL,MAAOG,KAAKU,QAASb,MACrBmB,MAAOhB,KAAKU,QAASM,MACrBC,SAAUjB,KAAKiB,SACfC,MAAOlB,KAAKU,QAASM,MAAQhB,KAAKiB,SAClCE,gBAAiB,EACjBC,mBAAoBpB,KAAKU,QAASU,mBAClCC,MAAOrB,KAAKU,QAASY,WAEwBtB,KAAKiB,SACtD,CAEAM,eAAeC,GACbxB,KAAKU,QAASE,MAAQZ,KAAKY,MAAQY,CACrC,EA1CW/B,EAAuB,oCAAvBA,GAAuBgC,8DAAvBhC,EAAuB,sBAAvBA,EAAuBiC,gqBCVpCC,iBAA+B,UAA/BA,CAA+B,UAErBA,SAA0BA,UAElCA,iBAA6B,WAEzBA,6BACFA,QACAA,iBAAoC,UAApCA,CAAoC,WAG9BA,uBACAA,iBAAMA,UAA2BA,UAGnCA,kBAAqB,eAArBA,CAAqB,eAEPA,kBAAKA,UAEjBA,sBAGEA,2DAEAA,qBACEA,UACFA,cAKNA,mBAA0B,oBAA1BA,CAA0B,gBAEXA,qBAAQA,QACnBA,qBAMEA,yCAAiBC,mBAAsB,EAAvCD,CAAwC,kDAN1CA,UAUFA,oBACEA,+BACFA,QACAA,oBACEA,UACFA,UAGFA,sBAA0CA,gCAASC,aAAW,GAC5DD,0BACFA,YAGJA,mBAAiC,cACVA,0BAAYA,QACjCA,wBACAA,oBACEA,UACFA,QACAA,oBAAqBA,wBAAUA,QAC/BA,wBACAA,mBAAiC,YAAjCA,CAAiC,cAEJA,oBAAMA,QAC/BA,oBACEA,UACFA,UAEFA,mBAAkB,cACSA,uBAASA,QAClCA,oBACEA,UACFA,4CA1EEA,iFAIaA,oGAMPA,kFASJA,qDAIEA,iEAYFA,sFAA2B,sBAQ7BA,qHAGAA,6GAaJA,+FAQIA,yFAMAA,s2GCvEV,MAAME,EAAiB,CAAC,CAAEC,KAAM,GAAIC,UAAWtC,IAMzC,MAAOuC,KAA2B,oCAA3BA,EAA2B,EAA3BA,EAA2B,sBAA3BA,MAA2B,0BAH5BC,cAAsBJ,GACtBI,gCCGN,MAAOC,KAAoB,oCAApBA,EAAoB,EAApBA,EAAoB,sBAApBA,MAAoB,0BAFrBC,IAAcH,EAA6BI","names":["ProductDetailsComponent","constructor","route","router","title","productsService","cartService","this","ngOnInit","id","snapshot","paramMap","get","setAtCart","url","getProductData","_this","product","getProductById","stock","setTitle","addToCart","addProductToCart","price","quantity","total","discountedPrice","discountPercentage","image","thumbnail","changeStockQtt","qtt","core","selectors","i0","ctx","routes","path","component","ProductDetailsRoutingModule","RouterModule","ProductDetailsModule","SharedModule","CatalogModule"],"sourceRoot":"webpack:///","sources":["./src/app/features/catalog/pages/product-details/product-details.component.ts","./src/app/features/catalog/pages/product-details/product-details.component.html","./src/app/features/catalog/pages/product-details/product-details-routing.module.ts","./src/app/features/catalog/pages/product-details/product-details.module.ts"],"sourcesContent":["import { Component } from '@angular/core';\nimport { Title } from '@angular/platform-browser';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { CartService, ProductsService } from 'src/app/core/services';\nimport { ICartProduct, IProduct } from 'src/app/shared/models';\n\n@Component({\n  templateUrl: './product-details.component.html',\n  styleUrls: ['./product-details.component.scss'],\n})\nexport class ProductDetailsComponent {\n  product?: IProduct;\n  favorited: boolean = false;\n  quantity: number = 1;\n  stock: number = 0;\n\n  constructor(\n    private route: ActivatedRoute,\n    private router: Router,\n    private title: Title,\n    private productsService: ProductsService,\n    private cartService: CartService\n  ) {}\n\n  ngOnInit() {\n    const id: string = this.route.snapshot.paramMap.get('prod')!;\n    this.cartService.setAtCart(this.router.url);\n    this.getProductData(id);\n  }\n\n  async getProductData(id: string) {\n    this.product = await this.productsService.getProductById(id);\n    this.stock = this.product.stock;\n    this.title.setTitle(`${this.product.title} | BC Store`);\n  }\n\n  addToCart() {\n    const cartProduct: ICartProduct = {\n      id: this.product!.id,\n      title: this.product!.title,\n      price: this.product!.price,\n      quantity: this.quantity,\n      total: this.product!.price * this.quantity,\n      discountedPrice: 0,\n      discountPercentage: this.product!.discountPercentage,\n      image: this.product!.thumbnail,\n    };\n    this.cartService.addProductToCart(cartProduct, this.quantity);\n  }\n\n  changeStockQtt(qtt: number) {\n    this.product!.stock = this.stock - qtt;\n  }\n}\n","<div class=\"details-container\">\n  <div class=\"product-title\">\n    <span>{{ product?.title ?? \"\" }}</span>\n  </div>\n  <div class=\"product-details\">\n    <div class=\"product-images\">\n      <images-carousel [images]=\"product?.images ?? []\"></images-carousel>\n    </div>\n    <div class=\"product-data-container\">\n      <div class=\"header\">\n        <div class=\"rate\">\n          <mat-icon fontIcon=\"grade\"></mat-icon>\n          <span>{{ product?.rating ?? \"\" }}</span>\n        </div>\n\n        <div class=\"actions\">\n          <button mat-icon-button>\n            <mat-icon>share</mat-icon>\n          </button>\n          <button\n            mat-icon-button\n            [color]=\"favorited ? 'warn' : 'default'\"\n            (click)=\"favorited = !favorited\"\n          >\n            <mat-icon>\n              {{ favorited ? \"favorite\" : \"favorite_border\" }}\n            </mat-icon>\n          </button>\n        </div>\n      </div>\n\n      <div class=\"product-data\">\n        <mat-form-field>\n          <mat-label>Quantity</mat-label>\n          <input\n            type=\"number\"\n            min=\"1\"\n            [max]=\"product?.stock ?? 1\"\n            matInput\n            placeholder=\"Enter the quantity\"\n            (ngModelChange)=\"changeStockQtt($event)\"\n            [(ngModel)]=\"quantity\"\n          />\n        </mat-form-field>\n        <span class=\"price\">\n          {{ product?.price ?? \"\" | currency : \"USD\" : \"symbol\" }}\n        </span>\n        <span class=\"stock\">\n          Products remaining: {{ product?.stock ?? \"\" }}\n        </span>\n      </div>\n\n      <button mat-raised-button color=\"primary\" (click)=\"addToCart()\">\n        Add to Cart\n      </button>\n    </div>\n  </div>\n  <div class=\"product-description\">\n    <span class=\"title\"> Description </span>\n    <mat-divider></mat-divider>\n    <span class=\"description\">\n      {{ product?.description ?? \"\" }}\n    </span>\n    <span class=\"title\"> Tech Info </span>\n    <mat-divider></mat-divider>\n    <div class=\"tech-info-container\">\n      <div class=\"info\">\n        <span class=\"info-name\"> Brand </span>\n        <span class=\"info-value\">\n          {{ product?.brand ?? \"\" }}\n        </span>\n      </div>\n      <div class=\"info\">\n        <span class=\"info-name\"> Category </span>\n        <span class=\"info-value\">\n          {{ product?.category ?? \"\" }}\n        </span>\n      </div>\n    </div>\n  </div>\n</div>\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { ProductDetailsComponent } from './product-details.component';\n\nconst routes: Routes = [{ path: '', component: ProductDetailsComponent }];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class ProductDetailsRoutingModule {}\n","import { NgModule } from '@angular/core';\n\nimport { ProductDetailsRoutingModule } from './product-details-routing.module';\nimport { ProductDetailsComponent } from './product-details.component';\nimport { SharedModule } from 'src/app/shared/shared.module';\nimport { CatalogModule } from '../../catalog.module';\n\n@NgModule({\n  declarations: [ProductDetailsComponent],\n  imports: [SharedModule, ProductDetailsRoutingModule, CatalogModule],\n})\nexport class ProductDetailsModule {}\n"],"x_google_ignoreList":[]}