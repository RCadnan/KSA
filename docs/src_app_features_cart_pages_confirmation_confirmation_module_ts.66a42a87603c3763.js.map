{"version":3,"file":"src_app_features_cart_pages_confirmation_confirmation_module_ts.66a42a87603c3763.js","mappings":"kTAWQA,oDAEEA,4BAAkB,YAAlBA,CAAkB,sBAAlBA,CAAkB,kBCHtB,MAAOC,EAMXC,YACUC,EACAC,EACAC,GAFAC,mBACAA,cACAA,aARVA,eAAoB,GACpBA,kBAA+B,EAQ5B,CAEHC,WACE,MAAMC,EAAcF,KAAKF,OAAOI,IAC1BC,EAAcD,EAAIE,UAAUF,EAAIG,QAAQ,IAAK,GAAK,EAAGH,EAAII,QAC/DN,KAAKH,YAAYU,eAAeJ,GAEhCH,KAAKQ,aAAeR,KAAKH,YAAYY,kBACrCT,KAAKU,UAAYV,KAAKD,MAAMY,qBAC5BX,KAAKY,aAAeZ,KAAKH,YAAYgB,mBACrCb,KAAKc,YAAcd,KAAKH,YAAYkB,gBACtC,CAEAC,UACEhB,KAAKH,YAAYoB,UAAU,WAC3BjB,KAAKF,OAAOoB,SAAS,CAAC,KACxB,EA1BWvB,EAAqB,oCAArBA,GAAqBwB,sCAArBxB,EAAqB,sBAArBA,EAAqByB,+ZDVlC1B,iBAAoC,UAApCA,CAAoC,UAEzBA,SAAgDA,UAGzDA,iBAAwB,UAAxBA,CAAwB,UAAxBA,CAAwB,QAGdA,0BAAcA,UAEpBA,SACEA,iCAOFA,QACFA,QAEAA,kBAA0B,WAEtBA,8BAAgBA,mBAAQA,UAA0BA,UAEpDA,iBACEA,wBACAA,mBACEA,+BACFA,UAEFA,iBACEA,wBACAA,mBACEA,+BACFA,QACAA,kBACEA,UAKFA,UAEFA,kBAA6B,WACrBA,kBAAKA,QACXA,mBACEA,+BACFA,UAGFA,qBAA0CA,gCAAS2B,WAAS,GAC1D3B,gCACFA,qBAnDKA,oEAUmBA,yCAWEA,gEAKtBA,mGAMAA,oGAGAA,8JAUAA,y3EE3CV,MAAM4B,EAAiB,CAAC,CAAEC,KAAM,GAAIC,UAAW7B,IAMzC,MAAO8B,KAAyB,oCAAzBA,EAAyB,EAAzBA,EAAyB,sBAAzBA,MAAyB,0BAH1BC,cAAsBJ,GACtBI,gCCGN,MAAOC,KAAkB,oCAAlBA,EAAkB,EAAlBA,EAAkB,sBAAlBA,MAAkB,0BAFnBC,IAAcH,EAA2BI","names":["i0","ConfirmationComponent","constructor","cartService","router","utils","this","ngOnInit","url","currentStep","substring","indexOf","length","changeStepData","cartProducts","getCartProducts","orderCode","generateRandomCode","paymentMehod","getPaymentMethod","paymentData","getPaymentData","confirm","emptyCart","navigate","core","selectors","ctx","routes","path","component","ConfirmationRoutingModule","RouterModule","ConfirmationModule","SharedModule","CartModule"],"sourceRoot":"webpack:///","sources":["./src/app/features/cart/pages/confirmation/confirmation.component.html","./src/app/features/cart/pages/confirmation/confirmation.component.ts","./src/app/features/cart/pages/confirmation/confirmation-routing.module.ts","./src/app/features/cart/pages/confirmation/confirmation.module.ts"],"sourcesContent":["<div class=\"confirmation-container\">\n  <div class=\"successful-buy\">\n    <span> Successful!! Your order code is {{ orderCode }} </span>\n  </div>\n\n  <div class=\"order-data\">\n    <div class=\"products-container\">\n      <div class=\"title\">\n        <h2>Order products</h2>\n      </div>\n      <ng-container>\n        <product-tile\n          *ngFor=\"let product of cartProducts; let i = index\"\n          [position]=\"i + 1\"\n          [product]=\"product\"\n          [quantity]=\"product.quantity\"\n          [hasActions]=\"false\"\n        ></product-tile>\n      </ng-container>\n    </div>\n\n    <div class=\"payment-data\">\n      <span>\n        Payment method: <strong>{{ paymentMehod?.method }}</strong>\n      </span>\n      <span>\n        Subtotal:\n        <strong>\n          {{ paymentData?.subTotal | currency : \"USD\" : \"symbol\" }}\n        </strong>\n      </span>\n      <span>\n        Discount:\n        <strong>\n          {{ paymentData?.discount | currency : \"USD\" : \"symbol\" }}\n        </strong>\n        <small>\n          {{\n            paymentData?.discountPercentage > 0\n              ? \"(\" + paymentData?.discountPercentage + \"%)\"\n              : \"\"\n          }}\n        </small>\n      </span>\n      <div class=\"estimated-total\">\n        <span>Total</span>\n        <span id=\"value\">\n          {{ paymentData?.total | currency : \"USD\" : \"symbol\" }}\n        </span>\n      </div>\n\n      <button mat-raised-button color=\"primary\" (click)=\"confirm()\">\n        Continue Shopping\n      </button>\n    </div>\n  </div>\n</div>\n","import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { CartService, UtilsService } from 'src/app/core/services';\nimport { ICartProduct } from 'src/app/shared/models';\nimport { IPaymentMethod } from '../../models';\n\n@Component({\n  templateUrl: './confirmation.component.html',\n  styleUrls: ['./confirmation.component.scss'],\n})\nexport class ConfirmationComponent {\n  orderCode: string = '';\n  cartProducts: ICartProduct[] = [];\n  paymentMehod?: IPaymentMethod;\n  paymentData: any;\n\n  constructor(\n    private cartService: CartService,\n    private router: Router,\n    private utils: UtilsService\n  ) {}\n\n  ngOnInit() {\n    const url: string = this.router.url;\n    const currentStep = url.substring(url.indexOf('/', 2) + 1, url.length);\n    this.cartService.changeStepData(currentStep);\n\n    this.cartProducts = this.cartService.getCartProducts();\n    this.orderCode = this.utils.generateRandomCode();\n    this.paymentMehod = this.cartService.getPaymentMethod();\n    this.paymentData = this.cartService.getPaymentData();\n  }\n\n  confirm(): void {\n    this.cartService.emptyCart('confirm');\n    this.router.navigate(['/']);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { ConfirmationComponent } from './confirmation.component';\n\nconst routes: Routes = [{ path: '', component: ConfirmationComponent }];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class ConfirmationRoutingModule {}\n","import { NgModule } from '@angular/core';\n\nimport { ConfirmationRoutingModule } from './confirmation-routing.module';\nimport { ConfirmationComponent } from './confirmation.component';\nimport { SharedModule } from 'src/app/shared/shared.module';\nimport { CartModule } from '../../cart.module';\n\n@NgModule({\n  declarations: [ConfirmationComponent],\n  imports: [SharedModule, ConfirmationRoutingModule, CartModule],\n})\nexport class ConfirmationModule {}\n"],"x_google_ignoreList":[]}