{"version":3,"file":"src_app_features_cart_pages_resume_resume_module_ts.9de18f2040e08ae3.js","mappings":"0TAIMA,gBAA0BA,yDAASA,4BAAmB,GACpDA,6BACFA,iDAGAA,2BAKEA,gFAAmBA,oCAAiC,EAApDA,CAAqD,+DACjCA,yBAAgB,GACrCA,oCALCA,4BAAkB,YAAlBA,CAAkB,iDAHtBA,SACEA,iCAQFA,8BAPwBA,gGA+C1BA,kBAAwB,UACfA,yDAA4CA,QACnDA,aAAGA,qCAAyBA,gBAAwBA,gBAAIA,mBAAzBA,yCClD7B,MAAOC,EAOXC,YAAoBC,EAAkCC,GAAlCC,mBAAkCA,cANtDA,kBAA+B,GAC/BA,wBAA6B,EAC7BA,cAAmB,EACnBA,WAAgB,EAChBA,cAAmB,CAEoD,CAEvEC,WACED,KAAKE,kBACL,MAAMC,EAAcH,KAAKD,OAAOI,IAC1BC,EAAcD,EAAIE,UAAUF,EAAIG,QAAQ,IAAK,GAAK,EAAGH,EAAII,QAC/DP,KAAKF,YAAYU,eAAeJ,EAClC,CAEQF,kBACNF,KAAKS,aAAeT,KAAKF,YAAYI,kBACrCF,KAAKU,mBACP,CAEAC,cACE,OAAoC,IAA7BX,KAAKS,aAAaF,MAC3B,CAEAK,oBACEZ,KAAKF,YAAYe,UAAU,QAC7B,CAEAC,iBACEd,KAAKU,mBACP,CAEAK,sBAAsBC,GACpBhB,KAAKU,mBACP,CAEAO,YAAYC,GACVlB,KAAKkB,mBAAqBA,EAC1BlB,KAAKmB,SAAWnB,KAAKoB,OAASF,EAAqB,IACrD,CAEAG,0BACE,YAAKD,MAAQpB,KAAKsB,SAAWtB,KAAKmB,SAC3BnB,KAAKoB,KACd,CAEAV,oBACE,MAAMa,EACJvB,KAAKS,aAAae,IAAKC,KACZC,MAAOD,EAAQC,MAAOC,SAAUF,EAAQE,YAGrD3B,KAAKsB,SAAWC,EAAWK,OAAO,CAACC,EAAIC,IAC9BD,EAAKC,EAAGJ,MAAQI,EAAGH,SACzB,EACL,CAEAI,eACE/B,KAAKF,YAAYkC,eAAe,CAC9BZ,MAAOpB,KAAKoB,MACZE,SAAUtB,KAAKsB,SACfH,SAAUnB,KAAKmB,SACfD,mBAAoBlB,KAAKkB,qBAE3BlB,KAAKD,OAAOkC,SAAS,CAAC,kBACxB,EAlEWrC,EAAe,oCAAfA,GAAesC,0BAAftC,EAAe,sBAAfA,EAAeuC,umBDT5BxC,iBAA8B,UAA9BA,CAA8B,UAA9BA,CAA8B,QAGpBA,yBAAaA,QACjBA,qBAGFA,QACAA,gCAUFA,QACAA,iBAA2B,UAA3BA,CAA2B,sBAGrBA,gDAAwByC,gBAAmB,GAC5CzC,UAGHA,kBAAgC,WAE5BA,wBAAUA,mBAAQA,+BAA4CA,UAEhEA,iBACEA,wBACAA,mBAASA,+BAA6CA,QACtDA,kBACEA,UACFA,UAEFA,kBAA6B,WACrBA,kBAAKA,QACXA,oBACEA,+BACFA,YAIJA,sBAIEA,gCAASyC,gBAAc,GAEvBzC,uBACFA,YAIJA,oEApDUA,wCAISA,wCAAsB,cAoBfA,sDAITA,+DAEPA,gFAMAA,gFAQJA,4qDE5CN,MAAM0C,EAAiB,CAAC,CAAEC,KAAM,GAAIC,UAAW3C,IAMzC,MAAO4C,KAAmB,oCAAnBA,EAAmB,EAAnBA,EAAmB,sBAAnBA,MAAmB,0BAHpBC,cAAsBJ,GACtBI,gCCGN,MAAOC,KAAY,oCAAZA,EAAY,EAAZA,EAAY,sBAAZA,MAAY,0BAFbC,IAAcH,EAAqBI","names":["i0","ResumeComponent","constructor","cartService","router","this","ngOnInit","getCartProducts","url","currentStep","substring","indexOf","length","changeStepData","cartProducts","calculateSubTotal","cartIsEmpty","emptyShoppingCart","emptyCart","changeQuantity","removeProductFromCart","productId","getDiscount","discountPercentage","discount","total","calculateEstimatedTotal","subTotal","priceArray","map","product","price","quantity","reduce","pv","cv","goToCheckout","setPaymentData","navigate","core","selectors","ctx","routes","path","component","ResumeRoutingModule","RouterModule","ResumeModule","SharedModule","CartModule"],"sourceRoot":"webpack:///","sources":["./src/app/features/cart/pages/resume/resume.component.html","./src/app/features/cart/pages/resume/resume.component.ts","./src/app/features/cart/pages/resume/resume-routing.module.ts","./src/app/features/cart/pages/resume/resume.module.ts"],"sourcesContent":["<div class=\"resume-container\">\n  <div class=\"products-container\">\n    <div class=\"title\">\n      <h2>Cart Products</h2>\n      <a *ngIf=\"!cartIsEmpty()\" (click)=\"emptyShoppingCart()\">\n        Empty your cart\n      </a>\n    </div>\n    <ng-container *ngIf=\"!cartIsEmpty(); else emptyCart\">\n      <product-tile\n        *ngFor=\"let product of cartProducts; let i = index\"\n        [position]=\"i + 1\"\n        [product]=\"product\"\n        [quantity]=\"product.quantity\"\n        (onRemoveProduct)=\"removeProductFromCart(product.id)\"\n        (onChangeQuantity)=\"changeQuantity()\"\n      ></product-tile>\n    </ng-container>\n  </div>\n  <div class=\"goto-checkout\">\n    <div class=\"coupon-container\">\n      <discount-field\n        (onDiscountPercentage)=\"getDiscount($event)\"\n      ></discount-field>\n    </div>\n\n    <div class=\"order-informations\">\n      <span>\n        Subtotal: <strong>{{ subTotal | currency : \"USD\" : \"symbol\" }}</strong>\n      </span>\n      <span>\n        Discount:\n        <strong> {{ discount | currency : \"USD\" : \"symbol\" }} </strong>\n        <small>\n          {{ discountPercentage > 0 ? \"(\" + discountPercentage + \"%)\" : \"\" }}\n        </small>\n      </span>\n      <div class=\"estimated-total\">\n        <span>Total</span>\n        <span id=\"value\">\n          {{ calculateEstimatedTotal() | currency : \"USD\" : \"symbol\" }}\n        </span>\n      </div>\n    </div>\n\n    <button\n      mat-raised-button\n      color=\"primary\"\n      [disabled]=\"cartIsEmpty()\"\n      (click)=\"goToCheckout()\"\n    >\n      CHECKOUT\n    </button>\n  </div>\n</div>\n\n<ng-template #emptyCart>\n  <div class=\"empty-cart\">\n    <span> There are no products in your shopping cart </span>\n    <p>Add products by clicking <a [routerLink]=\"['/']\">HERE</a></p>\n  </div>\n</ng-template>\n","import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { CartService } from 'src/app/core/services';\nimport { ICartProduct } from 'src/app/shared/models';\n\n@Component({\n  templateUrl: './resume.component.html',\n  styleUrls: ['./resume.component.scss'],\n})\nexport class ResumeComponent {\n  cartProducts: ICartProduct[] = [];\n  discountPercentage: number = 0;\n  discount: number = 0;\n  total: number = 0;\n  subTotal: number = 0;\n\n  constructor(private cartService: CartService, private router: Router) {}\n\n  ngOnInit() {\n    this.getCartProducts();\n    const url: string = this.router.url;\n    const currentStep = url.substring(url.indexOf('/', 2) + 1, url.length);\n    this.cartService.changeStepData(currentStep);\n  }\n\n  private getCartProducts() {\n    this.cartProducts = this.cartService.getCartProducts();\n    this.calculateSubTotal();\n  }\n\n  cartIsEmpty(): boolean {\n    return this.cartProducts.length === 0;\n  }\n\n  emptyShoppingCart() {\n    this.cartService.emptyCart('clear');\n  }\n\n  changeQuantity() {\n    this.calculateSubTotal();\n  }\n\n  removeProductFromCart(productId: number) {\n    this.calculateSubTotal();\n  }\n\n  getDiscount(discountPercentage: number) {\n    this.discountPercentage = discountPercentage;\n    this.discount = this.total * (discountPercentage / 100);\n  }\n\n  calculateEstimatedTotal(): number {\n    this.total = this.subTotal - this.discount;\n    return this.total;\n  }\n\n  calculateSubTotal() {\n    const priceArray: { price: number; quantity: number }[] =\n      this.cartProducts.map((product) => {\n        return { price: product.price, quantity: product.quantity };\n      });\n\n    this.subTotal = priceArray.reduce((pv, cv) => {\n      return pv + cv.price * cv.quantity;\n    }, 0);\n  }\n\n  goToCheckout() {\n    this.cartService.setPaymentData({\n      total: this.total,\n      subTotal: this.subTotal,\n      discount: this.discount,\n      discountPercentage: this.discountPercentage,\n    });\n    this.router.navigate(['/cart/checkout']);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { ResumeComponent } from './resume.component';\n\nconst routes: Routes = [{ path: '', component: ResumeComponent }];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class ResumeRoutingModule {}\n","import { NgModule } from '@angular/core';\n\nimport { ResumeRoutingModule } from './resume-routing.module';\nimport { ResumeComponent } from './resume.component';\nimport { SharedModule } from 'src/app/shared/shared.module';\nimport { CartModule } from '../../cart.module';\n\n@NgModule({\n  declarations: [ResumeComponent],\n  imports: [SharedModule, ResumeRoutingModule, CartModule],\n})\nexport class ResumeModule {}\n"],"x_google_ignoreList":[]}